<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:component="com.ylsoft.component.*"
		  width="100%" height="100%" creationComplete="init()">
	<!--玩家充值排名-->
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.ylsoft.common.Excel;
			import com.ylsoft.common.Message;
			import com.ylsoft.common.Pagelimit;
			import com.ylsoft.common.Toolkit;
			import com.ylsoft.common.XWindow;
			import com.ylsoft.component.BuissnesserChooserMuti;
			import com.ylsoft.component.BuissnesserChooserSingle;
			import com.ylsoft.core.Amf;
			import com.ylsoft.core.AppConfig;
			import com.ylsoft.core.ModuleFactory;
			import com.ylsoft.core.ModuleGlobal;
			import com.ylsoft.core.UIProgressBar;
			import com.ylsoft.event.AppEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.core.FlexGlobals;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			private var amf:Amf;
			private var _amf:Amf;
			public var server:Object;
			private var _total:Object = new Object;
			private var _dateformat:DateFormatter = new DateFormatter();
			
			private function init():void{
				//禁用返回列表
				FlexGlobals.topLevelApplication.form_return.enabled=false;
				initColumns();
				_dateformat.formatString = 'YYYY-MM-DD';
				this.addEventListener(AppEvent.BUISSNESSER_CHOOSE_COMPLETE,buissnessChooseComplete);
			}
			
			public function initDataGrid(evt:AppEvent):void{
				var result:ArrayCollection
				if(amf != null){
					result = new ArrayCollection(amf.getResult() as Array);
				}
				cd.initData(result);
				
				var _total_recharge:Number = 0;
				var _total_unrecharge:Number = 0;
				var _total_usedrecharge:Number = 0;
				
				if(result != null){
					for each(var obj:Object in result){
						_total_recharge+=Number(obj.recharge_yuanbao);
						_total_unrecharge += Number(obj.unrecharge_yuanbao);
						_total_usedrecharge += Number(obj.used_yuanbao);
					}
					this.total_recharge.text = _total_recharge.toString();
					this.total_unrecharge.text = _total_unrecharge.toString();
					this.total_usedrecharge.text = _total_usedrecharge.toString();
				}
				
				amf = null;
				FlexGlobals.topLevelApplication.dispatchEvent(new AppEvent(AppEvent.EXCEL_EXPORT_READY));
			}
			
			private function initColumns():void{
				var col1:DataGridColumn = new DataGridColumn();
				col1.dataField = 'pid';
				col1.headerText = '角色ID';
				col1.width = 120;
				
				var col2:DataGridColumn = new DataGridColumn();
				col2.dataField = 'name';
				col2.headerText = '角色名';
				col2.width = 120;
				
				var col3:DataGridColumn = new DataGridColumn();
				col3.dataField = 'account_name';
				col3.headerText = '账号名';
				col3.width = 120;
				
				var col4:DataGridColumn = new DataGridColumn();
				col4.dataField = 'servername';
				col4.headerText = '服务器标识';
				col4.width = 120;
				
				var col5:DataGridColumn = new DataGridColumn();
				col5.dataField = 'levels';
				col5.headerText = '等级';
				col5.width = 120;
				
				var col6:DataGridColumn = new DataGridColumn();
				col6.dataField = 'profession';
				col6.headerText = '职业';
				col6.width = 120;
				
				var col7:DataGridColumn = new DataGridColumn();
				col7.dataField = 'recharge_yuanbao';
				col7.headerText = '总充值元宝';
				col7.width = 120;
				col7.sortCompareFunction = function(prev:Object,next:Object):int{
						return ObjectUtil.numericCompare(prev.recharge_yuanbao,next.recharge_yuanbao);
				}
					
				var col8:DataGridColumn = new DataGridColumn();
				col8.dataField = 'unrecharge_yuanbao';
				col8.headerText = '非充值获得元宝';
				col8.width = 120;
				col8.sortCompareFunction = function(prev:Object,next:Object):int{
					return ObjectUtil.numericCompare(prev.unrecharge_yuanbao,next.unrecharge_yuanbao);
				}
				
				var col9:DataGridColumn = new DataGridColumn();
				col9.dataField = 'used_yuanbao';
				col9.headerText = '总消耗元宝';
				col9.width = 120;
				col9.sortCompareFunction = function(prev:Object,next:Object):int{
					return ObjectUtil.numericCompare(prev.used_yuanbao,next.used_yuanbao);
				}
					
				var col10:DataGridColumn = new DataGridColumn();
				col10.dataField = 'shengyu_yuanbao';
				col10.headerText = '剩余元宝';
				col10.width = 120;
				col10.sortCompareFunction = function(prev:Object,next:Object):int{
					return ObjectUtil.numericCompare(prev.shengyu_yuanbao,next.shengyu_yuanbao);
				}
				
				cd.dg.columns = cd.dg.columns.concat(new Array(col1,col2,col3,col4,col5,col6,col7,col8,col9,col10));
			}
			
			
			
			private function buissnesserChooser():void{
				var bc : BuissnesserChooserSingle = new BuissnesserChooserSingle();
				bc.width = 800;
				bc.height = 400;
				XWindow.getInstance().addWindow(bc,this).show();
			}
			
			private function getCondition():Object{
				var condition : Object = new Object();
				condition.starttime = this.starttime.text;
				condition.endtime = this.endtime.text;
				condition.server = this.server;
				return condition;
			}
			
			private function doSearch():void{
				amf = new Amf();
				amf.setFaultMessage("通信失败");
				amf.registerCallBack(initDataGrid);
				amf.startService('rechargeOrderService','lists',getCondition());
			}
			
			
			private function checkServerChooser(evt:Event):void{
				if(this.server == null || this.starttime.text == '' || this.endtime.text == '')
					this.search_btn.enabled = false;
				else{
					var parttern : RegExp = /-|:/g;
					var startdate:String = this.starttime.text.replace(parttern,'');
					var enddate : String = this.endtime.text.replace(parttern,'');
					if(int(startdate) > int(enddate)){
						Alert.show('起始日期不能大于结束日期');
						this.search_btn.enabled = false;return;
					}
					
					this.search_btn.enabled = true;
					FlexGlobals.topLevelApplication.dispatchEvent(new AppEvent(AppEvent.EXCEL_EXPORT_READY));
				}
			}
			
			private function search_today():void{
				var today:String = this._dateformat.format(new Date);
				this.starttime.text = today;
				this.endtime.text = today;
				this.search_btn.enabled = true;
				this.search_btn.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
			}
			
			private function search_seven():void{
				var oneday : Number = 60 * 60 * 24 *1000;
				var datenow:Date = new Date();
				var enddate: String = this._dateformat.format(datenow);
				var startdate : String = this._dateformat.format(new Date(datenow.time - 7*oneday));
				this.starttime.text = startdate;
				this.endtime.text = enddate;
				this.search_btn.enabled = true;
				this.search_btn.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
			}
			
			private function buissnessChooseComplete(evt:AppEvent):void{
				var starttime:String = this.starttime.text;
				var endtime:String = this.endtime.text;
				this.server_name.text = this.server.name;
				if(starttime!='' && endtime !='' && this.server != null){
					this.search_btn.enabled = true;
					this.today_btn.enabled = true;
					this.seven_btn.enabled = true;
					FlexGlobals.topLevelApplication.dispatchEvent(new AppEvent(AppEvent.EXCEL_EXPORT_READY));
				}else if(this.server != null){
					this.today_btn.enabled = true;
					this.seven_btn.enabled = true;
				}
				else {
					this.search_btn.enabled = false;
					this.today_btn.enabled = false;
					this.seven_btn.enabled = false;
				}
			}
			
			public function exportExcel(evt:AppEvent):void{
				var excel : Excel = Excel.getInstance();
				excel.address = AppConfig.EXCEL_GATEWAY;
				excel.dgcolumns = this.cd.dg;
				excel.start_time = this.starttime.text;
				excel.end_time = this.endtime.text;
				excel.excel_name = '玩家充值排名';
				excel.module_key = AppConfig.module_key;
				excel.server_id = server.id;
				excel.httpBuildQuery();
				FlexGlobals.topLevelApplication.btn_excel_export.enabled = true;
			}
		]]>
	</fx:Script>
	<s:Panel width="100%" height="100%" dropShadowVisible="true" title="玩家充值排名">
		<component:Search x="0" top="0">
		</component:Search>
		<component:CB_Datagrid id="cd" height="80%" verticalCenter="5">
		</component:CB_Datagrid>
		<s:HGroup right="2" top="2" width="300">
			<s:Button id="search_btn"  label="查询" click="doSearch()" enabled="false" buttonMode="true"/>
			<s:Button  label="选择运营商和服务器" click="buissnesserChooser()" buttonMode="true"/>
		</s:HGroup>
		<mx:DateField x="129" y="2" width="155" yearNavigationEnabled="true" buttonMode="true" id="starttime" change="checkServerChooser(event)"  monthNames="[一月,二月,三月,四月,五月,六月,七月,八月,九月,十月,十一月,十二月]"  dayNames="[日,一,二,三,四,五,六]"  formatString="YYYY-MM-DD"/>
		<mx:DateField x="129" y="29" width="155" yearNavigationEnabled="true" buttonMode="true" id="endtime"  change="checkServerChooser(event)" monthNames="[一月,二月,三月,四月,五月,六月,七月,八月,九月,十月,十一月,十二月]"  dayNames="[日,一,二,三,四,五,六]" formatString="YYYY-MM-DD"/>
		<s:Label x="97" y="7" text="开始" />
		<s:Label x="97" y="34" text="结束"/>
		<mx:LinkButton x="10" y="4" label="今天" enabled="false" id="today_btn" click = "search_today()"/>
		<mx:LinkButton x="10" y="30" label="最近7天" enabled="false" id="seven_btn" click = "search_seven()"/>
		<s:HGroup y="34" right="0" width="302">
			<s:Label  fontWeight="bold" text="已选择"/>
			<s:Label id="server_name"  color="#FE0000" fontWeight="bold" text="0"/>
		</s:HGroup>
		<s:Form x="0" bottom="0" width="100%" height="10%">
			<s:layout>
				<s:HorizontalLayout paddingTop="3" verticalAlign="middle"/>
			</s:layout>
			<s:FormItem label="总充值元宝" color="#000102">
				<s:layout>
					<s:HorizontalLayout/>
				</s:layout>
				<s:Label id="total_recharge" color="#085E8F" text="0"/>
			</s:FormItem>
			<s:FormItem label="非充值元宝总数">
				<s:Label color="#085E8F" id="total_unrecharge" text="0"/>
			</s:FormItem>
			<s:FormItem label="消耗元宝总数">
				<s:Label text="0" id="total_usedrecharge" color="#085E8F"/>
			</s:FormItem>
		</s:Form>
	</s:Panel>	
	
</s:Module>
