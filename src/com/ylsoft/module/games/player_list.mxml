<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:component="com.ylsoft.component.*"
		  width="100%" height="100%" creationComplete="init()">
	<!--玩家信息-->
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.ylsoft.common.ColorLabel;
			import com.ylsoft.common.DesSecurity;
			import com.ylsoft.common.Message;
			import com.ylsoft.common.Msg_ServerCode;
			import com.ylsoft.common.Pagelimit;
			import com.ylsoft.common.SocketListener;
			import com.ylsoft.common.Toolkit;
			import com.ylsoft.common.XWindow;
			import com.ylsoft.component.BuissnesserChooserMuti;
			import com.ylsoft.component.BuissnesserChooserSingle;
			import com.ylsoft.component.special.PlayerDetail;
			import com.ylsoft.core.Amf;
			import com.ylsoft.core.AppConfig;
			import com.ylsoft.core.ModuleFactory;
			import com.ylsoft.core.ModuleGlobal;
			import com.ylsoft.core.SocketService;
			import com.ylsoft.core.UIProgressBar;
			import com.ylsoft.event.AppEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.core.FlexGlobals;
			import mx.events.ListEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import ronco.base.NetCore31;
			private var amf:Amf;
			private var _amf:Amf;
			private var detail_amf:Amf;
			public var server:Object;
			private var _total:Object = new Object;
			private var _dateformat:DateFormatter = new DateFormatter();
			
			private function init():void{
				//禁用返回列表
				FlexGlobals.topLevelApplication.form_return.enabled=false;
				initColumns();
				_dateformat.formatString = 'YYYY-MM-DD';
				
				//给datagrid绑定双击事件
				this.cd.dg.addEventListener(ListEvent.ITEM_DOUBLE_CLICK,showdetail);
				
				
				//监听运营商服务器选择事件
				this.addEventListener(AppEvent.BUISSNESSER_CHOOSE_COMPLETE,buissnesserChooserComplete);
				
				//初始化搜索栏组件
				this.onlinestatus.labelField = 'label';
				this.onlinestatus.dataProvider = new ArrayCollection(
					[
						{'label':'所有','type':0},
						{'label':'在线','type':1},
						{'label':'离线','type':2}
					]
				);
				this.onlinestatus.selectedIndex = 0;
				
				//初始化排序
				this.order.labelField = 'label';
				this.order.dataProvider = new ArrayCollection([
					{label:"所有",value:0},
					{label:"等级:高->低",value:1},
					{label:"元宝:高->低",value:2},
					{label:"银币:高->低",value:3}
				]);
				this.order.selectedIndex = 0;
				
				//初始化操作状态
				this.opstate.labelField = 'label';
				this.opstate.dataProvider = new ArrayCollection([
					{label:"无",value:0},
					{label:"禁言",value:3},
					{label:"封号",value:2}
				]);
				this.opstate.selectedIndex = 0;
				
			}
			
			public function initDataGrid(evt:AppEvent):void{
				var result:ArrayCollection
				if(amf != null){
					result = new ArrayCollection(amf.getResult() as Array);
				}
				else if(sb.amf != null)
					result = new ArrayCollection(sb.amf.getResult() as Array);
				
				cd.initData(result);
				initSubpage();
				amf = null;
			}
			
			private function initColumns():void{
				var col1:DataGridColumn = new DataGridColumn();
				col1.dataField = 'id';
				col1.headerText = '角色ID';
				col1.width = 120;
				
				var col2:DataGridColumn = new DataGridColumn();
				col2.dataField = 'name';
				col2.headerText = '角色名';
				col2.width = 120;
				col2.itemRenderer = new ClassFactory(ColorLabel);
				
				var col3:DataGridColumn = new DataGridColumn();
				col3.dataField = 'account_name';
				col3.headerText = '账号名';
				col3.width = 120;
				col3.itemRenderer = new ClassFactory(ColorLabel);
				
				var col4:DataGridColumn = new DataGridColumn();
				col4.dataField = 'servername';
				col4.headerText = '服务器标识';
				col4.width = 120;
				
				var col5:DataGridColumn = new DataGridColumn();
				col5.dataField = 'levels';
				col5.headerText = '等级';
				col5.width = 120;
				
				var col6:DataGridColumn = new DataGridColumn();
				col6.dataField = 'profession';
				col6.headerText = '职业';
				col6.width = 120;
				
				var col7:DataGridColumn = new DataGridColumn();
				col7.dataField = 'camp';
				col7.headerText = '阵营';
				col7.width = 120;
				
				var col8:DataGridColumn = new DataGridColumn();
				col8.dataField = 'partyname';
				col8.headerText = '帮派';
				col8.width = 120;
				
				
				var col9:DataGridColumn = new DataGridColumn();
				col9.dataField = 'yuanbao';
				col9.headerText = '元宝';
				col9.width = 120;
				
				
				var col10:DataGridColumn = new DataGridColumn();
				col10.dataField = 'money';
				col10.headerText = '银币';
				col10.width = 120;
				
				cd.dg.columns = cd.dg.columns.concat(new Array(col1,col2,col3,col4,col5,col6,col7,col8,col9,col10));
			}
			
			
			private function initSubpage():void{
				sb.service = 'playerService';
				sb.method = 'lists';
				sb.methodTotal = 'num_rows';
				sb.container = this;
				sb.condition = getCondition();
				sb.initTotal();				
			}
			
			
			private function buissnesserChooser():void{
				var bc : BuissnesserChooserSingle = new BuissnesserChooserSingle();
				bc.width = 800;
				bc.height = 400;
				XWindow.getInstance().addWindow(bc,this).show();
			}
			
			private function buissnesserChooserComplete(evt:AppEvent):void{
				if(server!=null){
					this.lb_servername.text = server.name;
					this.search_btn.enabled = true;
				}
				this.search_btn.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
				this.onlinestatus.dispatchEvent(new Event(Event.CHANGE));
			}
			
			private function getCondition():Object{
				var condition : Object = new Object();
				condition.account_or_name = this.lb_account_or_name.text;
				condition.onlinestatus = this.onlinestatus.selectedItem.type;
				condition.opstate = this.opstate.selectedItem.value;
				condition.server = server;
				condition.order = order.selectedItem.value;
				return condition;
			}
			
			private function doSearch():void{
				this.sb.is_total_exec = false;
				amf = new Amf();
				amf.setFaultMessage("通信失败");
				amf.registerCallBack(initDataGrid);
				amf.startService('playerService','lists',new Pagelimit(0,AppConfig.PAGECOUNT),getCondition());
			}
			
			
			private function showdetail(evt:ListEvent):void{
				var selectItem : Object = this.cd.dg.selectedItem;
				if(selectItem == null)return;
				
				var id : uint = selectItem.id;
				
				detail_amf = new Amf();
				detail_amf.setFaultMessage("无法读取用户信息");
				detail_amf.registerCallBack(showdetailhandler);
				detail_amf.startService('playerService','detail',id,server);
			}
			
			private function showdetailhandler(evt:AppEvent):void{
				var player:Object = detail_amf.getResult() as Object;
				if(player != null){
					var pd:PlayerDetail = new PlayerDetail();
					pd.width = 1000;
					pd.height = 500;
					XWindow.getInstance().addWindow(pd,this).show();
					pd.setPlayerDetail(player,server);
				}
			}
			
			private function GMOperation(code : int):void{
				if(this.cd.selecteditems.length == 0){
					Alert.show("请在要封号的玩家前面打勾");return;
				}
				var op:String = "";
				switch(code){
					case 0: op = "恢复";break;
					case 1: op = "删号";break;
					case 2: op = "封号";break;
					case 3: op = "禁言";break;
					case 4: op = "踢出";break;
				}
				
				Message.confirm("请确认操作:"+op,this,this.opConfirm,new Array([code]));
			}
			
			private function opConfirm(params:Array):void{
				//发送请求修改玩家状态
				amf = new Amf();
				amf.setFaultMessage('通信失败');
				amf.registerCallBack(opHandler);
				amf.startService('playerService','GMOperation',this.cd.selecteditems.source,this.server,params[0]);
			}
			
			private function opHandler(evt:AppEvent):void{
				var stat:Number = Number(amf.getResult());
				if(stat == -1)Alert.show('操作失败');
				else Alert.show('操作成功');
				amf = null;
			}
			
		]]>
	</fx:Script>
	<s:Panel width="100%" height="100%" dropShadowVisible="true" title="在线玩家">
		<component:Search x="0" top="0">
		</component:Search>
		<component:CB_Datagrid id="cd" height="86%" verticalCenter="15" >
		</component:CB_Datagrid>
		<component:Subpages id="sb" x="0" bottom="0">
		</component:Subpages>
		<s:HGroup right="233" top="0" width="209">
			<s:Button id="search_btn"  label="查询" click="doSearch()" enabled="false" buttonMode="true"/>
			<s:Button  label="选择运营商和服务器" click="buissnesserChooser()" buttonMode="true"/>
		</s:HGroup>
		<s:HGroup right="4" top="0" width="227" gap="0">
			<s:Button  label="恢复" click="GMOperation(0)" buttonMode="true" width="45"/>
			<s:Button  label="踢出" click="GMOperation(4)" buttonMode="true" width="45"/>
			<s:Button  label="禁言" click="GMOperation(3)" buttonMode="true" width="45"/>
			<s:Button  label="封号" click="GMOperation(2)" buttonMode="true" width="45"/>
			<s:Button  label="删号" click="GMOperation(1)" buttonMode="true" width="45" enabled="false"/>
		</s:HGroup>
		<s:HGroup y="34" right="0" width="302">
			<s:Label  fontWeight="bold" text="已选择服务器"/><s:Label textAlign="center" id="lb_servername" color="#FF0000" text=""/>
		</s:HGroup>
		<s:Label left="10" top="8"  text="角色名或账号"/>
		<s:TextInput left="95" top="2" id="lb_account_or_name"/>
		<s:Label left="231" top="7"  text="状态"/>
		<mx:ComboBox id="onlinestatus" left="260" top="1" width="80" height="25" openDuration="300"/>
		<s:Label left="370" top="8"  text="排序"/>
		<mx:ComboBox id="order" left="400" top="1" width="156" height="25" openDuration="300"/>
		<s:Label x="11" y="36" text="操作状态"/>
		<mx:ComboBox id="opstate" x="95" y="29" width="129" height="24"/>
	</s:Panel>	
	
</s:Module>

