<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:common="com.ylsoft.common.*"
		  xmlns:component="com.ylsoft.component.*"
		  width="100%" height="100%" creationComplete="init(event)">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.ylsoft.common.Toolkit;
			import com.ylsoft.common.XWindow;
			import com.ylsoft.component.BuissnesserChooserMuti;
			import com.ylsoft.component.FormBottom;
			import com.ylsoft.core.Amf;
			import com.ylsoft.core.AppConfig;
			import com.ylsoft.core.ModuleFactory;
			import com.ylsoft.core.ModuleGlobal;
			import com.ylsoft.core.UIProgressBar;
			import com.ylsoft.event.AppEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.managers.PopUpManager;
			
			private var amf:Amf;
			private var _amf:Amf;
			private var noticeAmf:Amf;
			private var listModule:String = 'sys/notice_list';
			private var editModule:String = 'sys/notice_add';
			
			/****表单属性*****/

			public var servers:ArrayCollection = new ArrayCollection;
			
			/*****表单对象****/
			private var formObj:Object;
			
			private function init(evt:Event):void{
				/*****通用方法*****/
				FlexGlobals.topLevelApplication.form_return.enabled=true;
				FlexGlobals.topLevelApplication.form_return.addEventListener(MouseEvent.CLICK,returnTable);//定义返回列表方法
				fb.save_btn.enabled = false;
				fb.save_btn.addEventListener(MouseEvent.CLICK,save);
				
				//监听运营商服务器选择事件
				this.addEventListener(AppEvent.BUISSNESSER_CHOOSE_COMPLETE,buissnesserChooserComplete);
				
				/*******单独方法********/
				if(AppConfig.formoperation == AppConfig.FORMADD){
					this.panel.title = "添加公告";
				}
				
				this.type.dataProvider = new ArrayCollection([{name:'单次',value:0},{name:'循环',value:1}]);//0:一次性 1:循环
				this.type.labelField = 'name';
				
				noticeAmf = new Amf;
				noticeAmf.registerCallBack(setNoticeTypes);
				noticeAmf.startService('noticeService','getNoticeTypes');
			}
			
			private function setNoticeTypes(evt:AppEvent):void{
				this.notice_type.dataProvider = new ArrayCollection(noticeAmf.getResult() as Array);
				notice_type.labelField = 'name';
			}
			
			private function returnTable(evt:MouseEvent):void{
				FlexGlobals.topLevelApplication.main_right.removeAllElements();
				ModuleGlobal.Modulefactory_main = new ModuleFactory();
				ModuleGlobal.Modulefactory_main.loadModule(listModule,FlexGlobals.topLevelApplication.main_right);
				ModuleGlobal.Modulefactory_pre_unload = new Array(ModuleGlobal.Modulefactory_main);
				AppConfig.formoperation = null;	
				FlexGlobals.topLevelApplication.form_return.removeEventListener(MouseEvent.CLICK,returnTable);
			}
			
			private function formvalidate():Boolean{
				if(this.servers.source != null && this.starttime.text != '' 
						&& this.endtime.text != '' && this.time.text !=''
						&& this.context.text != '' && this.context.text.length < 128){
					   return true;
				}
				return false;
			}
			
			private function save(evt:MouseEvent):void{
				
				if(this.formvalidate() == false)return;
				
				formObj = new Object();
				formObj.servers = this.servers.source;
				formObj.starttime = this.starttime.text;
				formObj.endtime = this.endtime.text;
				formObj.time = this.time.text;
				formObj.context = this.context.text;
				formObj.type = this.type.selectedItem.value;
				formObj.admin = AppConfig.admin;
				formObj.notice_type = this.notice_type.selectedItem.id;
				
				if(AppConfig.formoperation == AppConfig.FORMEDIT){
					formObj.id = AppConfig.formid;
				}
				
				amf = new Amf();
				amf.registerCallBack(saveComplete);
				amf.startService('noticeService','save',formObj);
			}
			
			private function saveComplete(evt:AppEvent):void{
				var result:Boolean = amf.getResult() as Boolean;
				if(result){
					FlexGlobals.topLevelApplication.main_right.removeAllElements();
					ModuleGlobal.Modulefactory_main = new ModuleFactory();
					ModuleGlobal.Modulefactory_main.setProgress(UIProgressBar.getInstance());
					ModuleGlobal.Modulefactory_main.loadModule(listModule,FlexGlobals.topLevelApplication.main_right);
					ModuleGlobal.Modulefactory_pre_unload = new Array(ModuleGlobal.Modulefactory_main);
					AppConfig.formoperation = null;	
					AppConfig.formid = 0;
					Alert.show('操作成功');
					return;
				}
				Alert.show('操作失败');
			}
			
			private function buissnesserChooser():void{
				var bc : BuissnesserChooserMuti = new BuissnesserChooserMuti();
				bc.width = 800;
				bc.height = 400;
				XWindow.getInstance().addWindow(bc,this).show();
			}
			
			private function buissnesserChooserComplete(evt:AppEvent):void{
				if(this.servers.length > 0){
					time.dispatchEvent(new KeyboardEvent(KeyboardEvent.KEY_UP));
					return;
				}
				this.fb.save_btn.enabled = false;
			}
			
			private function checkServerChooser(evt:Event):void{
				if(this.servers.length==0 || this.starttime.text == '' || (this.endtime.text == '' && this.fi_endtime.enabled==true) || this.time.text == '' || this.context.text == '')
					this.fb.save_btn.enabled = false;
				else{
					var parttern : RegExp = /-|:|\s+/g;
					var startdate:String = this.starttime.text.replace(parttern,'');
					var enddate : String = this.endtime.text.replace(parttern,'');
					if(int(startdate) > int(enddate) && this.type.selectedIndex!=0){
						Alert.show('起始日期不能大于结束日期');
						this.fb.save_btn.enabled = false;return;
					}
					
					this.fb.save_btn.enabled = true;
				}
			}
			
			private function checkType():void{
				if(this.type.selectedItem.value == 0){
					this.fi_endtime.enabled = false;
					return;
				}
				this.fi_endtime.enabled = true;
			}
			
		]]>
	</fx:Script>
	<s:Panel id="panel" x="0" y="0" width="100%" height="100%" >
		<s:Form left="10" top="10" width="100%" height="90%">
			<s:layout>
				<s:VerticalLayout/>
			</s:layout>
			<s:FormItem width="463" label="服务器">
				<s:layout>
					<s:HorizontalLayout verticalAlign="middle"/>
				</s:layout>
				<s:Spacer width="177" height="14"/>
				<mx:LinkButton label="浏览" click="buissnesserChooser()" color="#0872A9" fontSize="14"
							   fontStyle="italic" fontWeight="bold" textDecoration="underline"/>
				<s:Label height="13" color="#FC0101" text="*"/>
				<s:Label text="已经选择"/>
				<s:Label color="#FA0303" text="0" id="servercount"/>
				<s:Label text="台服务器"/>
			</s:FormItem>
			<s:FormItem width="463" label="类型" >
				<s:layout>
					<s:HorizontalLayout verticalAlign="middle"/>
				</s:layout>
				<s:Spacer width="305" height="9"/>
				<mx:ComboBox id="type" width="80" change="checkType()" openDuration="300"
							 paddingLeft="5">
					
				</mx:ComboBox>
				<s:Label color="#FF1705" text="*"/>
			</s:FormItem>
			<s:FormItem width="464" label="位置">
				<s:layout>
					<s:HorizontalLayout verticalAlign="middle"/>
				</s:layout>
				<s:Spacer width="271" height="10"/>
				<mx:ComboBox id="notice_type" x="231" y="0"/>
				<s:Label x="398" y="4" color="#FF0606" text="*"/>
			</s:FormItem>
			<s:FormItem width="463" label="开始时间">
				<s:layout>
					<s:HorizontalLayout verticalAlign="middle"/>
				</s:layout>
				<s:Spacer width="105" height="10"/>
				<common:MyDateField id="starttime" width="256" buttonMode="true" change="checkServerChooser(event)" focusOut="checkServerChooser(event)" yearNavigationEnabled="true"/>
				<s:Label color="#FA0000" text="*"/>
			</s:FormItem>
			<s:FormItem width="465" label="结束时间" id="fi_endtime" enabled="false">
				<s:layout>
					<s:HorizontalLayout verticalAlign="middle"/>
				</s:layout>
				<s:Spacer width="105" height="10"/>
				<common:MyDateField id="endtime"  width="258" buttonMode="true" change="checkServerChooser(event)" focusOut="checkServerChooser(event)" yearNavigationEnabled="true"/>
				<s:Label color="#FF0000" text="*"/>
			</s:FormItem>
			<s:FormItem width="464" label="间隔(分钟)">
				<s:layout>
					<s:HorizontalLayout verticalAlign="middle"/>
				</s:layout>
				<s:Spacer width="302" height="10"/>
				<s:TextInput id="time" width="51" keyUp="checkServerChooser(event)" focusOut="checkServerChooser(event)" restrict="0-9"/>
				<s:Label color="#FF0000" text="*"/>
			</s:FormItem>
			<s:FormItem width="552" height="199" label="内容">
				<s:layout>
					<s:HorizontalLayout verticalAlign="top"/>
				</s:layout>
				<s:helpContent>
					<s:VGroup>
						<s:Label text="128个汉字"></s:Label>
					</s:VGroup>
				</s:helpContent>
				<s:TextArea id="context" width="420" height="171" prompt="输入公告内容" keyUp="checkServerChooser(event)" focusOut="checkServerChooser(event)" />
				<s:Label color="#FF0202" text="*"/>
			</s:FormItem>
		</s:Form>
		<component:FormBottom id="fb" x="0" y="524">
		</component:FormBottom>
	</s:Panel>
</s:Module>
